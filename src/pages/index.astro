---
import MobileLayout from '../layouts/MobileLayout.astro';

// --- DEFINIZIONE DATI ---
// Per risolvere il "ReferenceError", definiamo 'items' qui.
const items = [
  { image: '/images/archivio/fiore-01.jpg' },
  { image: '/images/archivio/fiore-02.jpg' },
  { image: '/images/archivio/fiore-03.jpg' },
  { image: '/images/archivio/fiore-04.jpg' },
];

// Controlla se 'items' è un array (buona prassi)
if (!Array.isArray(items)) {
  console.error("ERRORE: 'items' non è un array. Controlla il recupero dati.");
}

const imageInterval = 100; // Intervallo in millisecondi
---

<MobileLayout>

  <header class="mobile-header theme-dark">
    <a href="/" class="mobile-header-logo">GBA</a>
    <div class="mobile-header-right">
      </div>
  </header>
  
  <div class="landing-wrapper">

    {items.length > 0 ? (
      <div class="rapid-sequence-background">
        {items.map((item, index) => (
            <img
                src={item.image}
                alt="Immagine dall'archivio botanico"
                class:list={["background-image", { "is-visible": index === 0 }]}
            />
        ))}
      </div>
    ) : (
      <div class="rapid-sequence-background">
        <p class="error-message">Nessuna immagine trovata nell'archivio.</p>
      </div>
    )}

    <div class="overlay-content centered-content">
      <a href="/scanner" class="scanner-link">Plants Scanner</a>
      <a href="/personale" class="collection-link">YOUR COLLECTION</a>
    </div>

  </div>
</MobileLayout>

<style>
  /* --- CSS HEADER (GBA in alto a sinistra) --- */
  .mobile-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100;
    display: flex;
    justify-content: space-between;
    align-items: center; 
    padding: 1rem 0.5rem; 
    box-sizing: border-box;
  }

  .mobile-header-logo {
    font-family: 'Monument Grotesk Trial', sans-serif;
    font-size: 1.1rem;
    font-weight: 700;
    text-decoration: none;
    z-index: 1;
  }

  /* Questo è mantenuto solo per l'allineamento Flexbox, ma è vuoto */
  .mobile-header-right {
    font-size: 0.9rem;
    font-weight: 500;
    text-transform: uppercase;
    text-align: right;
    z-index: 1;
    display: flex;
    gap: 0.8rem;
    /* CHIAVE: Nessun allineamento verticale. Resta in alto. */
    transform: none; 
    margin-top: 0; 
  }
  
  /* Stili per il tema scuro */
  .mobile-header.theme-dark {
    background-color: transparent; 
    color: #ffffff;
  }
  .mobile-header.theme-dark .mobile-header-logo,
  .mobile-header.theme-dark .mobile-header-right a,
  .mobile-header.theme-dark .mobile-header-right span {
    color: #fff;
  }
  /* --- FINE CSS HEADER --- */


  /* Contenitore principale che riempie il MobileLayout */
  .landing-wrapper {
    position: relative;
    width: 100%;
    height: 100%; 
    overflow: hidden;
    background-color: #000; 
  }

  /* Immagini di sfondo */
  .rapid-sequence-background {
    position: absolute;
    inset: 0; 
    z-index: 1;
  }
  .background-image {
    position: absolute;
    inset: 0;
    width: 100%; 
    height: 100%;
    object-fit: cover; 
    opacity: 0;
    transition: none; 
  }
  .background-image.is-visible { 
    opacity: 1; 
  }

  /* Contenitore per i testi sovrapposti */
  .overlay-content {
    position: absolute;
    inset: 0;
    z-index: 2; 
    color: white;
    font-family: monospace;
    padding: 0 0.5rem; /* Padding laterale per allineamento bordi */
    pointer-events: none; /* Permette interazione con gli elementi figli */
  }

  /* NUOVO CONTENITORE PER CENTRATURA */
  .centered-content {
    display: flex;
    justify-content: space-between; /* Allinea a sinistra e a destra */
    align-items: center; /* CHIAVE: Centra verticalmente */
  }

  /* Stili comuni ai link Plants Scanner e Your Collection */
  .scanner-link,
  .collection-link {
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-family: 'Monument Grotesk Mono Trial', monospace;
    font-weight: 500;
    font-size: 0.9rem;
    pointer-events: auto; /* Riabilita l'interazione solo per i link */
  }
  
  /* Rimuovo gli stili non più necessari */
  .top-left-title,
  .middle-right-link,
  .middle-left-link {
    display: none; 
  }
  
</style>

<script define:vars={{ imageInterval }}>
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.background-image');
    
    // Non fare nulla se c'è 1 sola immagine o nessuna
    if (images.length < 2) return; 
    
    let currentIndex = 0;
    
    // Assicurati che imageInterval sia un numero valido
    const intervalTime = typeof imageInterval === 'number' ? imageInterval : 100;

    setInterval(() => {
      // Bonus: Mette in pausa l'animazione se la finestra non è attiva
      if (document.hidden) return; 
      
      // Nasconde l'immagine corrente
      images[currentIndex].classList.remove('is-visible');
      
      // Calcola la prossima immagine (tornando a 0 se è l'ultima)
      currentIndex = (currentIndex + 1) % images.length;
      
      // Mostra la nuova immagine
      images[currentIndex].classList.add('is-visible');

    }, intervalTime);
  });
</script>