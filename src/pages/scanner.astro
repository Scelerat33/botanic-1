---
// src/pages/scanner.astro
import MobileLayout from '../layouts/MobileLayout.astro';

// ... (const plant = {...} - i tuoi dati)
const plant = {
    name: "Papiro Egiziano", image: "/papiro-egiziano.jpg",
    family: "Cyperus papyrus", class: "Liliopsida", subclass: "Commelinidae",
    order: "Cyperales", genus: "Cyperus",
    description: "Un popolare ibrido di Aechmea, celebre per la sua infiorescenza unica. Le foglie formano una rosetta verde-grigiastra. Lo stelo fiorale porta brattee di un rosa elettrico da cui si sviluppano fiori di un incredibile colore blu-viola brillante, che creano un contrasto cromatico molto ricercato. Come altre Aechmea, è robusta e monocarpica."
};
---
<MobileLayout activePage="camera">
    
    <main class="main-content-camera">
        <div class="camera-overlay-content">
            <p>Scan the qr code <br>to access the plant's <br> information.</p>
            <button id="scan-btn" class="scan-target-icon">
                <svg viewBox="0 0 67 67" fill="none"><path d="M33.5 58.625V33.5M33.5 58.625L41.875 50.25M33.5 58.625L25.125 50.25M33.5 33.5V8.375M33.5 33.5H8.375M33.5 33.5H58.625M33.5 8.375L25.125 16.75M33.5 8.375L41.875 16.75M8.375 33.5L16.75 41.875M8.375 33.5L16.75 25.125M58.625 33.5L50.25 25.125M58.625 33.5L50.25 41.875" stroke-linecap="round" stroke-linejoin="round"/></svg>
            </button>
        </div>
    </main>

    <div id="plant-overlay" class="plant-card-overlay" slot="overlay">
        <div class="plant-card">
            <button id="close-btn" class="close-btn">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M6 9L12 15L18 9" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>
            </button>
            <div class="card-content">
                <div class="image-container">
                    <img src={plant.image} alt={plant.name} />
                    <button id="add-to-collection-btn" class="icon-btn plus-icon">
                        <svg class="icon-plus" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>
                        <svg class="icon-check" viewBox="0 0 24 24"><path d="M20 6L9 17L4 12" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>
                    </button>
                    <button class="icon-btn diamond-icon">✦</button>
                </div>
                <h2>{plant.name}</h2>

                <div class="swipe-container">
                    <div class="swipe-wrapper">
                        <div class="swipe-page">
                            <dl class="plant-details">
                                <div><dt>Family</dt><dd>{plant.family}</dd></div>
                                <div><dt>Class</dt><dd>{plant.class}</dd></div>
                                <div><dt>Sub Class</dt><dd>{plant.subclass}</dd></div>
                                <div><dt>Order</dt><dd>{plant.order}</dd></div>
                                <div><dt>Genere</dt><dd>{plant.genus}</dd></div>
                            </dl>
                        </div>
                        <div class="swipe-page">
                            <h3>Description</h3>
                            <p class="plant-description">{plant.description}</p>
                        </div>
                    </div>
                </div>

                <div class="pagination">
                    <span class="dot active" data-index="0"></span>
                    <span class="dot" data-index="1"></span>
                </div>
            </div>
        </div>
    </div>
</MobileLayout>

<script>
    // ... (il tuo SCRIPT è corretto, lascialo com'è) ...
    document.addEventListener('DOMContentLoaded', () => {
        const scanBtn = document.getElementById('scan-btn');
        const overlay = document.getElementById('plant-overlay');
        const closeBtn = document.getElementById('close-btn');
        const addBtn = document.getElementById('add-to-collection-btn');

        scanBtn.addEventListener('click', () => { overlay.classList.add('is-visible'); });
        closeBtn.addEventListener('click', () => { overlay.classList.remove('is-visible'); });
        addBtn.addEventListener('click', () => { addBtn.classList.toggle('is-added'); });

        // --- LOGICA SWIPE ---
        const swipeContainer = overlay.querySelector('.swipe-container');
        const swipeWrapper = overlay.querySelector('.swipe-wrapper');
        const pages = overlay.querySelectorAll('.swipe-page');
        const dots = overlay.querySelectorAll('.pagination .dot');
        const pageCount = pages.length;

        let currentPage = 0;
        let startX = 0;
        let isDragging = false;

        function updateSlider() {
            swipeWrapper.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'; 
            swipeWrapper.style.transform = `translateX(-${currentPage * 100}%)`;
            dots.forEach((dot, index) => {
                dot.classList.toggle('active', index === currentPage);
            });
        }

        function handleStart(clientX) {
            isDragging = true;
            startX = clientX;
            swipeWrapper.style.transition = 'none'; 
        }

        function handleMove(clientX) {
            if (!isDragging) return;
            const diffX = clientX - startX;
            const baseTranslate = -currentPage * swipeContainer.offsetWidth;
            swipeWrapper.style.transform = `translateX(${baseTranslate + diffX}px)`;
        }

        function handleEnd(clientX) {
            if (!isDragging) return;
            isDragging = false;
            const diffX = clientX - startX;
            const threshold = swipeContainer.offsetWidth / 4; 

            if (Math.abs(diffX) > threshold) {
                if (diffX < 0 && currentPage < pageCount - 1) {
                    currentPage++;
                } else if (diffX > 0 && currentPage > 0) {
                    currentPage--;
                }
            }
            updateSlider(); 
        }
        swipeContainer.addEventListener('touchstart', (e) => handleStart(e.touches[0].clientX), { passive: true });
        swipeContainer.addEventListener('touchmove', (e) => handleMove(e.touches[0].clientX), { passive: true });
        swipeContainer.addEventListener('touchend', (e) => handleEnd(e.changedTouches[0].clientX));
        swipeContainer.addEventListener('mousedown', (e) => handleStart(e.clientX));
        swipeContainer.addEventListener('mousemove', (e) => handleMove(e.clientX));
        swipeContainer.addEventListener('mouseup', (e) => handleEnd(e.clientX));
        swipeContainer.addEventListener('mouseleave', () => { if (isDragging) handleEnd(startX); });

        updateSlider();
    });
</script>

<style>
    /* I tuoi STILI sono corretti.
      L'animazione è qui:
    */
    .plant-card-overlay { 
      position: absolute; /* 'absolute' o 'fixed' funzionano */
      inset: 0; 
      z-index: 200; 
      display: flex; 
      justify-content: center; 
      align-items: flex-end; 
      background-color: rgba(0, 0, 0, 0.3); 
      opacity: 0; 
      pointer-events: none; 
      transform: translateY(100%); /* << PARTE DA SOTTO */
      transition: transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1), opacity 0.5s ease; 
    }
    .plant-card-overlay.is-visible { 
      opacity: 1; 
      pointer-events: auto; 
      transform: translateY(0%); /* << ARRIVA AL CENTRO */
    }

    /* Assicurati che .main-content-camera sia alto 100% */
    .main-content-camera { 
        height: 100%; 
        background-image: url('/greenhouse-bg.jpg'); 
        background-size: cover; 
        background-position: center; 
    }
    
    /* Tutti gli altri stili (invariati) */
    .camera-overlay-content { width: 100%; height: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; padding: 2rem; box-sizing: border-box; background: rgba(0, 0, 0, 0.3); backdrop-filter: blur(3px); }
    .camera-overlay-content p { font-size: 1.3rem; font-weight: 500; margin-bottom: 2rem; line-height: 1.4; max-width: 300px; text-align: center; color: white; }
    .scan-target-icon { background: none; border: none; padding: 0; cursor: pointer; }
    .scan-target-icon svg { width: 80px; height: 80px; stroke: white; stroke-width: 3px; }

    .plant-card { width: 100%; max-width: 390px; max-height: 90%; background-color: white; border-radius: 30px 30px 0 0; position: relative; display: flex; flex-direction: column; overflow: hidden; }
    .close-btn { position: absolute; top: 0.5rem; left: 50%; transform: translateX(-50%); background-color: #e0e0e0; border: none; width: 40px; height: 40px; border-radius: 50%; cursor: pointer; display: flex; align-items: center; justify-content: center; z-index: 10; }
    .card-content { padding: 2.5rem 1.5rem 1.5rem 1.5rem; flex-grow: 1; display: flex; flex-direction: column; overflow: hidden; }
    .image-container { position: relative; border-radius: 20px; overflow: hidden; margin-top: 1rem; flex-shrink: 0; }
    .image-container img { width: 100%; display: block; }
    h2 { text-align: center; margin: 1.5rem 0; font-size: 1.5rem; font-weight: 600; flex-shrink: 0; }
    .pagination { display: flex; justify-content: center; gap: 8px; margin-top: auto; padding-top: 1rem; flex-shrink: 0; }
    .swipe-container { width: 100%; overflow: hidden; flex-grow: 1; position: relative; margin-top: 1rem; }
    .swipe-wrapper { display: flex; width: 200%; height: 100%; }
    .swipe-page { width: 50%; height: 100%; flex-shrink: 0; box-sizing: border-box; padding: 0 0.2rem; overflow-y: auto; scrollbar-width: none; -ms-overflow-style: none; }
    .swipe-page::-webkit-scrollbar { display: none; }
    .plant-details div { display: flex; justify-content: space-between; padding: 0.75rem 0; border-bottom: 1px solid #f0f0f0; }
    .plant-details dt { color: #6c6c70; }
    .plant-details dd { margin: 0; color: #1c1c1e; font-weight: 500; }
    .swipe-page h3 { font-size: 1rem; font-weight: 600; color: #1c1c1e; margin-bottom: 0.5rem; }
    .plant-description { font-size: 0.95rem; line-height: 1.6; color: #3c3c3e; margin: 0; }
    .dot { width: 8px; height: 8px; border-radius: 50%; background-color: #d1d1d6; transition: background-color 0.4s ease;}
    .dot.active { background-color: #619EE9; }
    .icon-btn { position: absolute; border: none; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; cursor: pointer; font-weight: bold; color: white; }
    .diamond-icon { bottom: 10px; right: 10px; background-color: transparent; font-size: 24px; color: white; }
    .plus-icon { top: 10px; right: 10px; background-color: #619EE9; transition: background-color 0.4s ease; }
    .plus-icon.is-added { background-color: #4CAF50; }
    .plus-icon svg { position: absolute; transition: transform 0.4s ease, opacity 0.4s ease; }
    .icon-plus { opacity: 1; transform: rotate(0deg) scale(1); }
    .icon-check { opacity: 0; transform: scale(0.5); }
    .plus-icon.is-added .icon-plus { opacity: 0; transform: rotate(180deg) scale(0.5); }
    .plus-icon.is-added .icon-check { opacity: 1; transform: scale(1) rotate(360deg); }
</style>