---
// src/pages/personale.astro
import MobileLayout from '../layouts/MobileLayout.astro';
import ScanCard from '../components/ScanCard.astro'; // <-- CORREZIONE: Rimosso il commento non valido
---
<MobileLayout>
  <div class="page-wrapper">
    
    <header class="page-header">
      <a href="/" class="header-link top-left">GBA</a>
      <a href="/personale" class="header-link top-right">YOUR COLLECTION (0)</a>
    </header>

    <div class="content-area">

      <div class="empty-message">
        <h2>HELLO LUCA</h2>
        <p>Scan some plants and add them to your collection</p>
      </div>

      <div id="collection-list" class="collection-list">
        </div>

    </div>

    <footer class="page-footer">
      <div class="footer-group bottom-left">
       <a href="/wrapped" class="footer-link">SHARE COLLECTION</a>
        <a href="/scanner" class="footer-link">PLANTS SCANNER</a>
      </div>
      <div class="footer-group bottom-right">
        <a href="/locations" class="footer-link">YOUR LOCATION</a>
        <label for="photo-upload-input" class="footer-link">UPDATE PHOTO</label>
      </div>
    </footer>

    <input type="file" id="photo-upload-input" accept="image/*" style="display: none;">

    <div id="fullscreen-image-wrapper" class="fullscreen-wrapper">
        <img id="uploaded-image-preview" src="" alt="Foto caricata">
        <button id="back-to-personale" class="fullscreen-btn back-btn">Indietro</button>
        <button id="trigger-scan" class="fullscreen-btn scan-btn">SCAN</button>
    </div>

    <ScanCard />

  </div>
</MobileLayout>

<script>
    // --- Funzioni Helper per il localStorage ---
    const COLLECTION_KEY = 'gba_collection';

    function getCollection() {
        const data = sessionStorage.getItem(COLLECTION_KEY); // <-- CORRETTO: Legge da sessionStorage
        return data ? JSON.parse(data) : [];
    }

    document.addEventListener('DOMContentLoaded', () => {
        // --- Logica Esistente per la Collezione ---
        const collection = getCollection();
        const listContainer = document.getElementById('collection-list');
        const emptyMessage = document.querySelector('.empty-message');
        const collectionCountHeader = document.querySelector('.top-right');

        collectionCountHeader.textContent = `YOUR COLLECTION (${collection.length})`;
        emptyMessage.style.display = 'block'; 

        if (collection.length === 0) {
            listContainer.style.display = 'none';
        } else {
            listContainer.style.display = 'block';
            listContainer.innerHTML = ''; 
            collection.forEach(plantName => {
                const plantElement = document.createElement('h2');
                plantElement.className = 'plant-item';
                plantElement.textContent = plantName;
                listContainer.appendChild(plantElement);
            });
        }

        // --- Logica per l'Upload Foto ---
        const uploadInput = document.getElementById('photo-upload-input');
        const fullscreenWrapper = document.getElementById('fullscreen-image-wrapper');
        const imagePreview = document.getElementById('uploaded-image-preview');
        const backButton = document.getElementById('back-to-personale');
        const scanButton = document.getElementById('trigger-scan');
        const pageWrapper = document.querySelector('.page-wrapper');

        // --- Elementi del componente ScanCard ---
        const scanCardOverlay = document.getElementById('scan-card-overlay');
        const closeScanCardButton = document.getElementById('close-scan-card');
        // Aggiungi il backdrop per la chiusura
        const scanCardBackdrop = scanCardOverlay.querySelector('.scan-card-backdrop');


        // 1. Quando l'utente sceglie un file
        uploadInput.addEventListener('change', (event) => {
            const file = event.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = (e) => {
                imagePreview.src = e.target.result;
                // CORREZIONE: Usa .classList per aggiungere la classe 'is-visible'
                fullscreenWrapper.classList.add('is-visible');
                pageWrapper.style.overflow = 'hidden'; 
            };
            reader.readAsDataURL(file);
        });

        // 2. Quando l'utente clicca "Indietro" dalla preview
        backButton.addEventListener('click', () => {
            // CORREZIONE: Usa .classList per rimuovere la classe 'is-visible'
            fullscreenWrapper.classList.remove('is-visible');
            uploadInput.value = null;
            imagePreview.src = "";
            pageWrapper.style.overflow = 'auto'; 
        });

        // 3. Quando l'utente clicca "Scan"
        scanButton.addEventListener('click', () => {
            if (scanCardOverlay) {
                scanCardOverlay.classList.add('is-visible');
            }
        });

        // 4. Funzioni per chiudere la Scan Card
        function closeScanOverlay() {
            if (scanCardOverlay) {
                scanCardOverlay.classList.remove('is-visible');
            }
        }

        // Assicurati che questi elementi esistano (potrebbero non essere pronti subito)
        if (closeScanCardButton) {
            closeScanCardButton.addEventListener('click', closeScanOverlay);
        }
        if (scanCardBackdrop) {
            scanCardBackdrop.addEventListener('click', closeScanOverlay);
        }
    });
</script>

<style>
  .page-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: #f0f0f0; 
    color: #333; 
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  }

  /* --- Posizionamento angoli --- */
  .header-link, .footer-link {
    text-decoration: none;
    color: #555;
    font-weight: 600;
    font-size: 0.9rem;
    text-transform: uppercase;
    position: absolute;
    z-index: 10;
  }

  /* Header */
  .top-left {
    top: 2.5rem;
    left: 1.5rem;
    font-size: 1.1rem;
    font-weight: 700;
    color: #000;
  }
  .top-right {
    top: 2.5rem;
    right: 1.5rem;
  }

  /* Footer */
  .footer-group {
    position: absolute;
    bottom: 2.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .bottom-left {
    left: 1.5rem;
    align-items: flex-start;
  }
  .bottom-right {
    right: 1.5rem;
    align-items: flex-end;
  }
  .footer-link {
    position: static; 
    cursor: pointer;
  }
  
  /* --- Contenuto Centrale --- */
  .content-area {
    padding: 8rem 1.5rem 10rem 1.5rem; 
  }
  .empty-message h2 {
    font-size: 1.5rem;
    margin: 0 0 0.5rem 0;
    color: #000;
  }
  .empty-message p {
    font-size: 1rem;
    color: #666;
    margin: 0;
    max-width: 200px;
    line-height: 1.4;
  }
  .collection-list {
    display: none; 
    margin-top: 2rem;
  }
  .plant-item {
    font-size: 1.8rem;
    color: #000;
    margin: 0 0 1rem 0;
    font-weight: 600;
  }

  /* --- CORREZIONE: Stili per l'upload e la preview --- */
  /* Questo stile nasconde la schermata nera di default */
  .fullscreen-wrapper {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100dvh;
      z-index: 1000;
      background: #000;
      display: none; /* Nascosto di default */
  }
  /* Questo stile la mostra quando lo script aggiunge la classe .is-visible */
  .fullscreen-wrapper.is-visible {
      display: block;
  }
  
  #uploaded-image-preview {
      width: 100%;
      height: 100%;
      object-fit: contain;
  }
  .fullscreen-btn {
      position: absolute;
      z-index: 1010;
      padding: 10px 15px;
      background: rgba(255, 255, 255, 0.2);
      border: 1px solid rgba(255, 255, 255, 0.4);
      backdrop-filter: blur(10px);
      border-radius: 8px;
      cursor: pointer;
      color: white;
      font-weight: 600;
      font-size: 0.9rem;
      text-transform: uppercase;
  }
  .back-btn {
      top: 2.5rem;
      left: 1.5rem;
  }
  .scan-btn {
      bottom: 2.5rem;
      right: 1.5rem;
      background: white;
      color: #000;
  }
</style>